{"version":3,"sources":["../src/delta_ctrl.js"],"names":["SingleStatCtrl","moment","_","$","kbn","TimeSeries","DeltaPluginCtrl","$scope","$injector","$rootScope","console","log","panelDefaults","links","datasource","maxDataPoints","interval","targets","cacheTimeout","dayInterval","hourInterval","minuteInterval","defaultsDeep","panel","scope","events","on","onInitEditMode","bind","render","addEditorTab","unitFormats","getUnitFormats","subItem","format","value","Promise","resolve","reject","length","$q","when","scopedVars","Object","assign","text","intervalMs","metricsQuery","panelId","id","range","rangeRaw","renderer","resolution","dayI","date","hourI","hour","minuteI","minute","thisMonth","to","beginThisMonth","startOf","lastMonth","subtract","beginLastMonth","metricCop","from","query","then","res1","title","res2","catch","err","results","setTimeQueryEnd","loading","data","result","datapoints","subscribe","handleDataStream","dashboard","snapshot","snapshotData","emit","elem","templateUrl"],"mappings":"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","file":"delta_ctrl.js","sourcesContent":["import {SingleStatCtrl} from 'app/plugins/panel/singlestat/module';\n\nimport moment from 'moment';\nimport _ from 'lodash';\nimport $ from 'jquery';\nimport 'jquery.flot';\nimport 'jquery.flot.gauge';\nimport kbn from 'app/core/utils/kbn';\nimport TimeSeries from 'app/core/time_series2';\n\nexport class DeltaPluginCtrl extends SingleStatCtrl {\n\n  constructor($scope, $injector, $rootScope) {\n    super($scope, $injector);\n    this.$rootScope = $rootScope;\n    console.log('Initializing plugin');\n\n    var panelDefaults = {\n      links: [],\n      datasource: null,\n      maxDataPoints: 100,\n      interval: null,\n      targets: [{}],\n      cacheTimeout: null,\n      dayInterval: 'NOW',\n      hourInterval: 'NOW',\n      minuteInterval: 'NOW',\n    };\n\n    _.defaultsDeep(this.panel, panelDefaults);\n    this.scope = $scope;\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    // this.events.on('panel-teardown', this.onPanelTeardown.bind(this));\n    this.events.on('panel-initialized', this.render.bind(this));\n\n  }\n\n  onInitEditMode() {\n    super.onInitEditMode();\n    this.addEditorTab('Delta Config', 'public/plugins/grafana-delta-panel/delta_config.html', 2);\n    this.unitFormats = kbn.getUnitFormats();\n  }\n\n  setUnitFormat(subItem) {\n    super.setUnitFormat();\n    this.panel.format = subItem.value;\n    this.render();\n  }\n\n  issueQueries(datasource) {\n    return new Promise((resolve, reject) => {\n      this.datasource = datasource;\n\n      if (!this.panel.targets || this.panel.targets.length === 0) {\n        return this.$q.when([]);\n      }\n\n      // make shallow copy of scoped vars,\n      // and add built in variables interval and interval_ms\n      var scopedVars = Object.assign({}, this.panel.scopedVars, {\n        \"__interval\":     {text: this.interval,   value: this.interval},\n        \"__interval_ms\":  {text: this.intervalMs, value: this.intervalMs},\n      });\n\n      var metricsQuery = {\n        panelId: this.panel.id,\n        range: this.range,\n        rangeRaw: this.rangeRaw,\n        interval: this.interval,\n        intervalMs: this.intervalMs,\n        targets: this.panel.targets,\n        format: this.panel.renderer === 'png' ? 'png' : 'json',\n        maxDataPoints: this.resolution,\n        scopedVars: scopedVars,\n        cacheTimeout: this.panel.cacheTimeout\n      };\n\n      const dayI = this.panel.dayInterval === 'NOW' ? moment().date() : this.panel.dayInterval;\n      const hourI = this.panel.hourInterval === 'NOW' ? moment().hour() : this.panel.hourInterval;\n      const minuteI = this.panel.minuteInterval === 'NOW' ? moment().minute() : this.panel.minuteInterval;\n\n      const thisMonth = moment(metricsQuery.range.to).date(dayI).hour(hourI).minute(minuteI);\n      const beginThisMonth = moment(thisMonth).startOf('month');\n      const lastMonth = moment(thisMonth).subtract(1, 'month');\n      const beginLastMonth = moment(lastMonth).startOf('month');\n\n      const metricCop = Object.assign({}, metricsQuery);\n      metricsQuery.rangeRaw.from = beginThisMonth;\n      metricsQuery.rangeRaw.to = thisMonth;\n      return datasource.query(metricsQuery)\n      .then((res1) => {\n        metricCop.rangeRaw.from = beginLastMonth;\n        metricCop.rangeRaw.to = lastMonth;\n        this.panel.title = `Delta ${beginLastMonth.format('DD-MM hh-mm-ss a')} / ${lastMonth.format('DD-MM hh-mm-ss a')} - ${beginThisMonth.format('DD-MM hh-mm-ss a')} / ${thisMonth.format('DD-MM hh-mm-ss a')}`;\n        return datasource.query(metricCop)\n        .then((res2) => resolve([res1, res2]))\n        .catch((err) => reject(err));\n      })\n      .catch((err) => reject(err));\n    });\n  }\n\n  handleQueryResult(results) {\n    this.setTimeQueryEnd();\n    this.loading = false;\n\n    // if (results[0].data.length <= 0 || results[1].data.length <= 0) {\n    //   let error = new Error();\n    //   error.message = 'Not enougth series error';\n    //   error.data = '0 query entered';\n    //   throw error;\n    // }\n\n    if (typeof results[0].data[0] === 'undefined'){\n      result = {data: []};\n      console.log('No result.');\n      return;\n    }\n\n    results[0].data[0].datapoints[0][0] -= results[1].data[0].datapoints[0][0]\n    var result = results[0];\n\n    // check for if data source returns subject\n    if (result && result.subscribe) {\n      this.handleDataStream(result);\n      return;\n    }\n\n    if (this.dashboard.snapshot) {\n      this.panel.snapshotData = result.data;\n    }\n\n    if (!result || !result.data) {\n      console.log('Data source query result invalid, missing data field:', result);\n      result = {data: []};\n    }\n\n    return this.events.emit('data-received', result.data);\n  }\n\n  link(scope, elem) {\n    this.events.on('render', () => {\n      console.log('rendering panel');\n    });\n  }\n}\n\nDeltaPluginCtrl.templateUrl = 'module.html';\n"]}